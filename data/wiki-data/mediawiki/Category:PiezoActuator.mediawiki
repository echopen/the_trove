# Category:PiezoActuator

= The echOpen shield Challenge =

We are currently working on a open-source ultrasound imaging device, and have started to get some results, but we are at the moment facing, a bottleneck that is data acquisition ([[:Category:Receiving]]) and transfer ([[:Category:Transmitting]]). The previous Challenge, which has matured since, is [[Challenge:_Signal_Acquisition_through_Arduino | here]].

Roughly, the aim of the circuit (a recap is done [[http://echopen.org/index.php?title=File:EchOpen_concept_(5).PNG here]] - especially on the first 5 images/slides of the page) is to buzz a 5MHz piezo through a 150V, 0.2µs peak, acquire a 5 to 7 HMz signal coming from the echoes (and to sample it at 40MHz) coming back to the sensor, filter it, apply a time variable gain to the signal, process it through high speed ADC (40MHz at least), and serve it to the raspberry (through PINs, SPI, USB ?), possibly with a CPLD/FPGA (or DSP / microcontroler ?) in between. 

As the data we have should be 25 imgs / sec, with 64 lines, the rate shall be around 120Mb/s, and to avoid the data transfer bottleneck (see [[Estimating datarates]]), we were thinking of leverage the capacities of raspberry and such to have shields/capes that can be used and connect through SPI for example to the raspberry where raw data can be processed, and image can be going out, hence a lower rate.


== Block Diagram ==
=== An exemple from a recent publication, using a CPLD + µC ===
[[File:Schemamichaud.png|center|800px ]]

(coming from [[File:Richard_low_cost_probe.pdf]] - it can be noted that this setup worked with a USB 5V 500mA enveloppe, so should work with a 5V 2A alim)

=== Possible design ===

[[File:raspi shield.jpg|center|800px]]

A small note , the MCP3424 propose the following conversion rate:
3.75 SPS (18 bits)
15 SPS (16 bits)
60 SPS (14 bits)
240 SPS (12 bits)
Which largely seems to me insufficient to detect echoes. not ?

Indeed! Error from my side =) Alternatives to dig ?
* On 6 bits, 15MSPS, we have the low cost CA3306 too.
* 12bits 15MSPS ->THS1215 
* 12bits at 5MSPS -> AD7356YRUZ

Others?

For more details on possible components, read [http://echopen.org/index.php?title=Challenge:_the_echOpen_shield#Possible_BOM below]

If we need a conversion rate more than 5 MSPS. It seems very difficult for a µC (RPi or BeagleBone) to manage Data at this speed in real time...

I found some MCU with an internal ADC and a good rate wich seems interesting : 
http://www.analog.com/en/products/processors-dsp/analog-microcontrollers/8052-core-products.html
http://www.microchip.com/Developmenttools/ProductDetails.aspx?PartNO=DM240015

== Constraints / ToRs ==
The shield:
*Shall deliver the frames
*Shall be compatible with a raspberry
*Shall ensure the raw data transfer to the raspberry memory space, one image frame at a time
*Shall not be already cost-optimized, but at least with a ~200€ production cost constraint

==Questions ==

{{PendingWork}}

*Why are we making this?
*Who is this for?
*How will this be used?
*What features does it need to have (now)?
*What features does it need to have (later)?
*What are the legacy requirements?
*Who’s going to build this?
*How many do we want to make?
*What is the timeline?

== Suggested Process ==
* Parts Selection and Schematic Capture
** For every part on a BOM, it's useful to take the extra time to find multiple vendors and list both the FUNCTION of the part and its CRITICAL SPECIFICATION (tolerance, size, cheapness, etc).
* Schematic Review –REVISIT QUESTIONS
* Layout Floor-planning (mechanical)
* PCB Layout
*Schematic + Layout Review –REVISIT QUESTIONS
*Pre-Tapeout Verification
**Have you fixed all DRC/ERC errors?
**All part footprints on PCB match BOM?
**All part pin-outs on schematic match data sheet?
**Does your schematic match your working proto?
**Did you verify the critical spec for each part?
**Did you find the right vendor part number for each part?
**Is your part in stock? (BUY IT NOW)
**All Pin-1 designators correct?
**All RefDes labels correct?
*Manufacturing Tape-out
*Test and Characterization
*Iterate (if necessary)
*Document
*Release

''Coming from OPEN-SOURCING THE ENGINEERING (DESIGN) PROCESS, thanks Amanda'' ;)

== Expected deliverables ==

The outputs of this should be quite standard:
* Circuit design
* BOM
**Part ID
**Reference Designator(s)
**Part Type
**Package Footprint
**Value/Description/Critical Spec
**Manufacturer’s Part Number
**Vendor’s Part Number
* Overall schematics
* PCB and corresponding Gerber files
**GERBERS
* FPGA program if FPGA technology is chosen

== Possible BOM ==


{| class="wikitable"
! style="text-align: center;" | Block
! style="text-align: center; font-weight: bold;" | Item
! style="text-align: center; font-weight: bold;" | References
! style="text-align: center; font-weight: bold;" | Unit Price
! style="text-align: center; font-weight: bold;" | Comments
! style="text-align: center; font-weight: bold;" | Relevant docs
|-
| style="text-align: right; font-weight: bold;" | Pulser
| 
| 
| 
| 
| http://www.st.com/web/en/news/n3553d
|-
| style="text-align: right; font-weight: bold;" | 
| 
| AN3240
| 
| 
| http://www.st.com/web/en/resource/technical/document/application_note/CD00277876.pdf
|-
| style="text-align: right; font-weight: bold;" | 
| Ultrasound Pulse generator
| HV7360
| 5,85 € MicroChip
| Input: 2.5V/3.3V/5V, 2.5A - > Output : +-100V, 35MHz
| http://www.microchip.com/wwwproducts/Devices.aspx?product=HV7360,http://ww1.microchip.com/downloads/en/DeviceDoc/HV7360.pdf
|-
| style="text-align: right; font-weight: bold;" | 
| Two or Three Level Ultrasound Pulser
| HV7361LA-G
| 5,95 € MicroChip, Digi- Key
| High Speed, 100V 2.5A
| Integrated switch - reco by M. Cooke,  http://www.alldatasheet.com/view_datasheet.jsp?Searchword=HV7361LA-G
|-
| style="text-align: right; font-weight: bold;" | 
| switching regulator controller
| LT3748
| $4.46 Linear
| Input 5v-100v, ouput 12V, 2A, 16 Pins
| http://cds.linear.com/docs/en/datasheet/3748fb.pdf
|-
| style="text-align: right; font-weight: bold;" | 
| 4-channel high voltage pulser
| STHV748
| 27,68 € Mouser.fr
| Huge, +- 90V, 2A,20MHz
| http://www.st.com/web/en/catalog/sense_power/FM1961/SC1372/PF219958
|-
| style="text-align: right; font-weight: bold;" | 
| dual MOSFET driver
| MD1210
| 1,33 € MicroChip
| input: 1.2V-5V -> output 4.5v- 13v, 2Ahttp://www.microchip.com/wwwproducts/Devices.aspx?product=MD1210
| Those have a recovery time that is quite long, and can get easily damaged - not to mention that they may be obsolete.
|-
| style="text-align: right; font-weight: bold;" | 
| N and P-Channel Enhancement-Mode Dual MOSFET
| TC2320
| 1,28 € MicroChip
| N +200V-> 7V , P- 200V -> 12V
| http://ww1.microchip.com/downloads/en/DeviceDoc/tc2320.pdf, http://www.microchip.com/wwwproducts/Devices.aspx?product=TC2320
|-
| style="text-align: right; font-weight: bold;" | Protection of the circuit
| 1-2 channel HV T/R switch
| MD0100
| 1, 04 € MicroChip
| +- 100V Input
| http://www.microchip.com/wwwproducts/Devices.aspx?product=MD0100,http://ww1.microchip.com/downloads/en/DeviceDoc/MD0100.pdf
|-
| 
| 
| LM96530
| 
| +- 60V output + switch
| http://www.ti.com/product/lm96530/description#relEnds
|-
| style="text-align: right; font-weight: bold;" | Pre-Amp
| 
| 
| 
| 
| 
|-
| style="text-align: right; font-weight: bold;" | Low Pass filter
| 
| 
| 
| Sallen and Key
| 
|-
| style="text-align: right; font-weight: bold;" | TGC
| single channel, ultralow noise, linear-in-dB, variable gain amplifier (VGA)
| AD8331
| $6.05 , sample possible, Analog Devices
| 120MHz, 10-bit/12-bit ADCs
| http://www.analog.com/media/en/technical-documentation/evaluation-documentation/154207235AD8331EB_a.pdf ,http://www.analog.com/en/products/amplifiers/variable-gain-amplifiers/voltage-controlled-vgas/ad8331.html#product-overview
|-
| style="text-align: right; font-weight: bold;" | 
| 
| PGA870
| 
| 
| Recommendation from Mike - high speed wide band programmable amplifier that will receivethe return signal and apply amplification. The gain is set by a 6-bit code and can be continually modified
|-
| style="text-align: right; font-weight: bold;" | Enveloppe detection
| DC to 6 GHz ENVELOPE AND TruPwr™ RMS Detector
| ADL5511
| $7.33 / 1000+, 2 samples possible, Analog Devices
| 130 MHz envelope bandwidth,Envelope delay:2 ns,Single-supply operation: 4.75 V to 5.25
| http://www.analog.com/en/products/rf-microwave/rf-power-detectors/rms-responding-detector/adl5511.html#product-overview
|-
| style="text-align: right; font-weight: bold;" | ADC
| 
| MCP3424
| 
| Too low!!! 240 SPS, not MSPS
| 
|-
| style="text-align: right; font-weight: bold;" | 
| 
| AD7356YRUZ
| 
| 12bits at 5MSPS
| OK if we're doing only enveloppe detection
|-
| style="text-align: right; font-weight: bold;" | 
| 
| THS1215
| 
| 12bits 15MSPS
| 
|-
| style="text-align: right; font-weight: bold;" | 
| 
| LTC1405
| 
| 
| Reco. AKU
|-
| style="text-align: right; font-weight: bold;" | 
| 6 bits, 15MSPS
| CA3306
| 
| Ok for enveloppe detection
| See: https://digibird1.wordpress.com/raspberry-pi-as-an-oscilloscope-10-msps/
|-
| style="text-align: right; font-weight: bold;" | DAC
| 12 bit 125MSPS Low Power ADC
| ADS4125
| 28,36 € digikey.fr
| 
| http://www.ti.com/product/ads4125
|-
| style="text-align: right; font-weight: bold;" | 
| 14 bit 125MSPS Low Power ADC
| ADS4145
| 44,67 € digikey.fr
| 
| http://www.ti.com/product/ads4145
|-
| style="text-align: right; font-weight: bold;" | All Integrated
| 
| APP 5553
| 
| 
| https://www.maximintegrated.com/en/app-notes/index.mvp/id/5553
|-
| style="text-align: right; font-weight: bold;" | Integrated AFE
| 
| 
| 
| 
| https://para.maximintegrated.com/en/results.mvp?fam=us_afe
|-
| style="text-align: right; font-weight: bold;" | 
| 
| 
| 
| (Pulser +/- 105 V), TCG (ou VGA) , ADC 50 MSPS et filtrage
| https://www.maximintegrated.com/en/products/analog/data-converters/analog-front-end-ics/MAX2082.html
|-
| style="text-align: right; font-weight: bold;" | 
| 
| AFE5801
| 
| 
| the AFE5801 includes an 8-channel variable-gain amplifier (VGA) and an 8-channel, 12bit, high-speed analog-to-digital converter (ADC) based on a switched capacitor design. Programming the modes of operation for the AFE5801 occurs over a Serial Peripheral Interface bus and is controlled by the FPGA
|-
| style="text-align: right; font-weight: bold;" | 
| 
| 
| 
| 
| 
|-
| style="text-align: right; font-weight: bold;" | 
| .National Semiconductor provides a similar option for a variable gain amplifier and data sampling chip in its LM96511 offering - However 376-pin BGA configuration too complicated
| LM96511
| $55 TI
| 8 channel, 12 bits
| http://www.ti.com/product/lm96511
|-
| style="text-align: right; font-weight: bold;" | 
| 
| AD9271
| 
| 
| 
|-
| style="text-align: right; font-weight: bold;" | 
| 
| XC7A35T
| 34.37$
| Xlinx XC7A35T FPGA IC
| Mike: This FPGA has been deployed in many medical monitoring equipment solutions including ultrasound
|}

== Suggested documentation ==

# Project Introduction (Goals, Overview)
# System Block Diagram
# Discussion of Essential Features/Trade-offs
# Block-by-Block Breakdown
## Function
## Schematic block
## Layout block
## Parts selection (and critical specs)
## Performance metrics (if applicable)
# Software/Firmware Summary
# Typical Application
# User’s Quick-Start Guide
# Errata

'''THE MORE WE SHARE, THE MORE OTHERS CAN QUESTION OUR DESIGN… THE FASTER WE CAN LEARN FROM OUR COLLECTIVE MISTAKES AND THE SOONER WE CAN CELEBRATE OUR COLLECTIVE SUCCESSES.'''

== Open questions from contributors ==
* A DSP may be sufficient for our needs: is that the case?
* One suggested the following setup:
**Using a a Main controller - STM32F407 + USB High speed PHY ??
** Analog frontend :  1/4 of AD8264 as LNA and VGA + AD9236 ADC. TGC can be controlled by internal STM32 DAC - that's max 100-point TGC calibration curve.  The ADC then could be connected to DCMI interface of STM32. ??
** Transmitter: could be HV Pulser and the TR switch - microchip HV7360 + MD0100,  STHV 748 ??
* Some pre processing could happen on the board (bandpass filter), data compression if feasible...
* DSP vs FPGA:
** About 120Mbits/sec: No SPI port will support such speed…. Only the Quad version… we can use USB 2.0 HS for such huge movement. And I agree with the first idea: A FPGA or FPGA/RISC MPU combination can be the best solution. Later, once on RPI, the data can be handled. But for so perfect measurement of times, and value, only a DSP it’s not enough. This is my opinion.
** In looking at the issue, I think that DSP can be implemented. Of course, that comes with the sourcing and a bit of programming, but it should work and provide some flexibility.

* 12/11/15: A couple of remarks, open to discussion (based on this work [[File:2011 PhilippeLevesque.pdf]] ):
** Analog part: 
***it'd be interesting to keep a 100M s/s sampling rate. 
***Wouldn't recommend MD1210 and TC2320 from supertex for the pulse part. Those have a recovery time that is quite long, and can get easily damaged - not to mention that they may be obsolete. 
***Wouldn't recommend two VGAs ... difficult to control, with a high risk of saturation.
**Memory: 
*** would replace PSRAM by a LPDDR (PSRAM being obsolete).
**Data processing: to keep some space for 
*** a USB3.0 interface
*** a WiFi interface
*** the ADC interface
*** memory interface for the LPDDR
** More information needed for the motor and transducer:
***power of the HV power supply
***max power for the pulse circuit
***adaptation circuit
***motor control/position signals
***motor alimentation 
** Then, back to analog to digital:
*** choice of the TGC and pre-amp
*** TGC control mode
*** Choice for the ADC
** Rest of the design
*** Suggestion to be based on a XILINX série7, LP-DDR memory, EEPROM (or FRAM) memory, a USB 3.0 chip (eg FTDI) and a module for the Wifi interface (ex Redpine).
** Igloo : at first sight, this FPGA is not made for an easy data processing that is required: the advantage of the Xilinx série 7, or an equivalent FPGA from Altéra are the DSP parts…dedicated multipliers are a great asset, even more powerfull than the LUTs. Moreover, the DPS components of the Xilinx série 7 have pre addrer, which allows that the DSP parts are more than excellent for the FIR filters.

== EchPert ==
 Mail luc at echopen d.o.t org !

== Bibliography ==
{{BibliographyFPGA}}

{{BibliographyIC}}

{{BibliographyEmile}}

[[Category:Challenge]][[Category:Electronics]][[Category:Microcontroller]]